"use strict";(self.webpackChunkgo_beyond=self.webpackChunkgo_beyond||[]).push([[524],{2798:(e,l,t)=>{t.d(l,{l:()=>i});const i={category:{"/":{path:"/category/",map:{设计模式:{path:"/category/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/",indexes:[0,1]}}}},tag:{"/":{path:"/tag/",map:{设计模式:{path:"/tag/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/",indexes:[0,1]}}}}}},8589:(e,l,t)=>{t.d(l,{M:()=>i});const i=["/architecture-design/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93.html","/architecture-design/design-principles-ideas.html","/architecture-design/%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE.html","/architecture-design/Redis%E7%AC%94%E8%AE%B0.html","/cs-basics/java/","/architecture-design/","/cs-basics/","/env-deploy/","/life-hobbies/","/reading/","/spring/","/learn/%E6%95%B0%E6%8D%AE%E8%A6%81%E7%B4%A0%E5%AD%A6%E4%B9%A0%E6%8A%A5%E5%91%8A.html","/intro.html"]},594:(e,l,t)=>{t.d(l,{U:()=>i});const i={article:{"/":{path:"/article/",indexes:[2,3,0,4,1,5,6,7,8,9,10,11,12]}},star:{"/":{path:"/star/",indexes:[]}},timeline:{"/":{path:"/timeline/",indexes:[2,3,0,4,1,5,6,7,8,9,10,11,12]}}}},2233:(e,l,t)=>{t.d(l,{B:()=>D});var i={};t.r(i);var n={};t.r(n);var s={};t.r(s),t.d(s,{default:()=>u});var a={};t.r(a);var r={};t.r(r),t.d(r,{default:()=>y});var o={};t.r(o),t.d(o,{default:()=>I});var d=t(9199),c=t(1367),h=t(4883),p=t(4124),g=t(7044);const u={enhance:({app:e})=>{(0,d.L4)("FontIcon")||e.component("FontIcon",h.A),(0,d.L4)("Badge")||e.component("Badge",p.A),(0,d.L4)("BiliBili")||e.component("BiliBili",g.A)},setup:()=>{(0,c.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/brands.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}}),(0,c.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/solid.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}}),(0,c.r9V)("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/fontawesome.min.js",(()=>{}),{attrs:{"data-auto-replace-svg":"nest"}})},rootComponents:[]};var E=t(4610),m=t(7809),v=t(9611),A=t(43),k=t(2346),b=t(4193),B=t(15);const y={enhance:({app:e})=>{}};var _=t(6895),f=t(662),L=t(3201),F=t(3076),C=t(5691),x=t(4691),w=t(2594);(0,C.M_)((e=>{const l=e.t,t=!1!==e.I,i=e.i;return t?{title:l,content:i?()=>[(0,x.h)(F.GB,{icon:i}),l]:null,order:e.O,index:e.I}:null}));const I={enhance:({app:e,router:l})=>{const{scrollBehavior:t}=l.options;l.options.scrollBehavior=async(...e)=>(await F.lE.wait(),t(...e)),(0,F.fk)(e),e.component("HopeIcon",F.GB),e.component("BloggerInfo",w.tI),e.component("SocialMedias",w.rS)},setup:()=>{(0,F.PV)(),(0,F.i$)(),(0,w.su)()},layouts:{Layout:F.PE,NotFound:F.Mk,BlogCategory:w.Pn,BlogHome:w.qX,BlogType:w.z7,Timeline:w.Kf}},D=[i,n,s,E,m,v,A,k,b,B,a,r,_,f,L,o].map((e=>e.default)).filter(Boolean)},6159:(e,l,t)=>{t.d(l,{J:()=>n,c:()=>i});const i=JSON.parse("{}"),n=Object.fromEntries([["/",{loader:()=>t.e(470).then(t.bind(t,1471)),meta:{t:"FlynnDocs 记录学习与生活",i:"home"}}],["/intro.html",{loader:()=>t.e(912).then(t.bind(t,263)),meta:{d:1731417113e3,v:"/assets/images/cover3.jpg",e:"\n<p>Place your introduction and profile here.</p>\n",r:{minutes:.04,words:13},t:"Intro Page",i:"circle-info",y:"a"}}],["/architecture-design/",{loader:()=>t.e(641).then(t.bind(t,534)),meta:{d:1731920812e3,e:"\n<h2>架构重点：</h2>\n<ul>\n<li>层次式架构</li>\n<li>云原生架构</li>\n<li>微服务架构</li>\n<li>架构属性与架构评估</li>\n<li>软件建模方法\n<ul>\n<li>结构化建模方法</li>\n<li>面向对象建模方法等</li>\n</ul>\n</li>\n<li>软件设计方法\n<ul>\n<li>结构化</li>\n<li>面向对象</li>\n</ul>\n</li>\n<li>各阶段的uml图，以及相关侧重点</li>\n<li>模型驱动的软件工程(MBSE) SysML</li>\n</ul>\n<h2>架构风格</h2>\n<ol>\n<li>数据流风格：批处理风格  、 管道/过滤器风格</li>\n<li>调用返回风格：主程序/子程序，面向对象，C/S，层次结构</li>\n<li>虚拟机风格： 解释器风格，基于规则的系统</li>\n<li>独立构件风格：进程通信，事件驱动</li>\n<li>仓库风格：数据库，黑板，超文本</li>\n</ol>",r:{minutes:2.32,words:695},t:"架构学习概览",y:"a"}}],["/architecture-design/Redis%E7%AC%94%E8%AE%B0.html",{loader:()=>t.e(586).then(t.bind(t,1839)),meta:{d:1733297771e3,e:"<p>Redis笔记\n一、数据结构</p>\n<ol>\n<li>String： 缓存，计数，共享session</li>\n<li>list：消息列表，文章列表，记录前N个最新登录的用户ID列表</li>\n<li>set ：独立IP，共同爱好，标签</li>\n<li>hash：存储、读取、修改用户属性</li>\n<li>Sorted set：排行榜</li>\n</ol>\n<p>二、更新方式（缓存一致性）：</p>\n<ol>\n<li>实时更新：在一个事务内先删除缓存，再更新数据库，再更新缓存</li>\n<li>异步准实时更新：在一个事务内先通过消息队列发布待更新数据消息给缓存更新服务，然后更新数据库；缓存更新服务订阅缓存更新消息，待收到更新消息后更新缓存。</li>\n</ol>",r:{minutes:4.58,words:1374},t:"",y:"a"}}],["/architecture-design/design-principles-ideas.html",{loader:()=>t.e(348).then(t.bind(t,5707)),meta:{d:1732612569e3,c:"设计模式",g:["设计模式"],e:'\n<h2>前言</h2>\n<p>面向对象、设计原则、设计模式、编程规范、重构技巧之间的关系。</p>\n<figure><img src="https://static001.geekbang.org/resource/image/f3/d3/f3262ef8152517d3b11bfc3f2d2b12d3.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>\n<ul>\n<li>面向对象编程因为具有丰富的特性(抽象、封装、继承、多态)，可以实现很多复杂的设计思路，是很多设计原则、设计模式等编码实现的基础。</li>\n<li>设计原则是指导我们代码设计的一些经验总结，对与某些场景下，是否应该应用某种设计模式具有指导意义，比如，开闭原则是很多设计模式(策略、模板等)的指导原则。</li>\n<li>设计模式是针对软件开发过程中常遇到一些设计问题，总结出来的一套解决方案或者设计思路。应用设计模式的主要目的是<strong>提高代码的可扩展性</strong>。从抽象程度上来说，设计原则比设计模式更抽象。设计模式更加具体、更加可执行。</li>\n<li>编程规范主要解决的是代码的<strong>可读性问题</strong>。编码规范相对于设计原则、设计模式，更加具体、更加偏重代码细节、更加能落地。持续的小重构依赖的理论基础主要就是编程规范。</li>\n<li>重构作为保持代码质量不下降的有效手段，利用的就是面向对象、设计原则、设计模式、编码规范这些理论。</li>\n</ul>',r:{minutes:22.34,words:6701},t:"设计原则与思想",i:"fa6-solid:list",O:1,y:"a"}}],["/architecture-design/%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE.html",{loader:()=>t.e(385).then(t.bind(t,4410)),meta:{d:174349367e4,e:"<p>ClassLoader</p>\n<p>定义：顾名思义，它是用来加载 Class 的。它负责将 Class 的字节码形式转换成内存形式的 Class 对象。字节码可以来自于磁盘文件 *.class，也可以是 jar 包里的 *.class，也可以来自远程服务器提供的字节流，字节码的本质就是一个字节数组 []byte，它有特定的复杂的内部格式。</p>\n<p>**延迟加载：**JVM 运行并不是一次性加载所需要的全部类的，它是按需加载，也就是延迟加载。程序在运行的过程中会逐渐遇到很多不认识的新类，这时候就会调用 ClassLoader 来加载这些类。加载完成后就会将 Class 对象存在 ClassLoader 里面，下次就不需要重新加载了。</p>",r:{minutes:2.32,words:696},t:"",y:"a"}}],["/architecture-design/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93.html",{loader:()=>t.e(870).then(t.bind(t,5245)),meta:{d:1733282628e3,c:"设计模式",g:["设计模式"],e:"\n<p>​\t\t创建型主要解决的是“对象的创建”问题。结构型解决的是“类或队形的组合和组装”问题，行为型解决的是“类或对象的交互”问题。</p>\n<h4>应用场景(设计意图)：</h4>\n<p>​\t即这个模式可以解决哪类问题。</p>\n<h4>解决方案：</h4>\n<p>第二部分是解决方案，即这个模式的设计思路和具体的代码实现</p>\n<p>应用举例：</p>\n<h2>01| 创建型</h2>\n<h3>1. 单例模式</h3>\n<h4>定义：</h4>\n<p>单例模式用来创建全局唯一的对象。一个类只允许创建一个对象（或者叫实例），那这个类就是一个单例类，这种设计模式就叫作单例模式。单例有几种经典的实现方式，它们分别是：<strong>饿汉式、懒汉式、双重检测、静态内部类、枚举</strong>。</p>",r:{minutes:6.09,words:1828},t:"设计模式总结",i:"fa6-solid:list",O:2,y:"a"}}],["/cs-basics/",{loader:()=>t.e(463).then(t.bind(t,8544)),meta:{d:1731920812e3,e:"<h2>计算机基础的学习笔记</h2>\n<ul>\n<li>算法</li>\n<li>计算机网络</li>\n<li>操作系统</li>\n<li>数据库</li>\n</ul>\n",r:{minutes:.08,words:24},t:"",y:"a"}}],["/env-deploy/",{loader:()=>t.e(350).then(t.bind(t,5856)),meta:{d:1731920812e3,e:"<h2>环境部署的文档</h2>\n<ul>\n<li>算法</li>\n<li>计算机网络</li>\n<li>操作系统</li>\n<li>数据库</li>\n</ul>\n",r:{minutes:.07,words:21},t:"",y:"a"}}],["/learn/%E6%95%B0%E6%8D%AE%E8%A6%81%E7%B4%A0%E5%AD%A6%E4%B9%A0%E6%8A%A5%E5%91%8A.html",{loader:()=>t.e(957).then(t.bind(t,9663)),meta:{d:1731915375e3,e:"\n<p>​\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t整理by 张福良</p>\n<p>[TOC]</p>\n<h2>01| 什么是数据要素</h2>\n<h3>数据的概念与独特属性</h3>\n<p>数据-信息-知识-智慧模型(DIKW)</p>\n<figure><figcaption>image-20240528103428719</figcaption></figure>\n<p>​\t\t数据与<strong>土地、劳动、资本、技术</strong>等传统生产要素相比有明显的独特性。</p>\n<p>​\t\t数据首先作为独特的<strong>技术产物</strong>，具有<strong>虚拟性、低成本复制性</strong>和<strong>主体多元性</strong>(用户、收集者、加工者等)。这些技术特性影响着数据在经济活动中的性质(<strong>经济对象</strong>)，使数据具备了<strong>非竞争性(一组数据可以被多个主体使用)、潜在的非排他性(当放弃控制数据的手段或控制的手段被攻破，就具有完全的非排他性)<strong>和</strong>异质性(相同数据对不同使用者和不同应用场景的价值不同，与之鲜明对比的是资本)</strong>。数据的以上特性使得与传统要素相匹配的规则体系、生态系统等难以直接沿用。</p>",r:{minutes:18.58,words:5575},t:"数据要素学习报告",y:"a"}}],["/life-hobbies/",{loader:()=>t.e(396).then(t.bind(t,9591)),meta:{d:1731920812e3,e:"<h2>生活爱好等</h2>\n<ul>\n<li>摄影</li>\n<li>唱歌</li>\n<li>理财....</li>\n</ul>\n",r:{minutes:.04,words:12},t:"",y:"a"}}],["/reading/",{loader:()=>t.e(789).then(t.bind(t,8630)),meta:{d:1731920812e3,e:"\n<p>曾经我尝试使用 Notion 来管理书单，用 Calibre、Logseq 来对电子书记读书笔记。然而，我渐渐发现自己几乎从不回头再看这些电子书的笔记。因此，我决定放弃电子书这种方式，而将我的注意力更多地集中在实体书籍上的摘要总结上。</p>\n<p>现在，当我对某本书的知识点感兴趣时，我会重新翻开那本实体书，重新阅读其中的书签部分，将其变为工具书。这种方式使我能够更有针对性地利用我的阅读时间，确保我真正吸收并运用所学。</p>\n<h2>阅读技巧</h2>\n<p>当我们阅读书籍时，目标是理解其中的核心思想、论证逻辑、论据以及思考框架。我们应该能够<strong>用自己的话语向朋友简要解释书中的内容</strong>。将所读<strong>书籍与自己的经验和见解相结合</strong>，以建立深刻的理解。这种关联是真正理解书籍内容的关键。应<strong>将书籍视为工具</strong>，仅在需要时查看特定部分，以便将其应用到实际情境中，实现最大效益。</p>",r:{minutes:3.19,words:956},t:"读书笔记",y:"a"}}],["/spring/",{loader:()=>t.e(618).then(t.bind(t,2229)),meta:{d:1731920812e3,e:"<h2>计算机基础的学习笔记</h2>\n<ul>\n<li>算法</li>\n<li>计算机网络</li>\n<li>操作系统</li>\n<li>数据库</li>\n</ul>\n",r:{minutes:.08,words:24},t:"",y:"a"}}],["/cs-basics/java/",{loader:()=>t.e(780).then(t.bind(t,4831)),meta:{d:173269839e4,e:"<ul>\n<li>异常处理</li>\n<li>权限校验</li>\n</ul>\n",r:{minutes:.03,words:8},t:"",y:"a"}}],["/404.html",{loader:()=>t.e(490).then(t.bind(t,5132)),meta:{t:""}}],["/learn/",{loader:()=>t.e(883).then(t.bind(t,2748)),meta:{t:"Learn"}}],["/category/",{loader:()=>t.e(583).then(t.bind(t,4595)),meta:{t:"分类",I:!1}}],["/category/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/",{loader:()=>t.e(766).then(t.bind(t,5578)),meta:{t:"设计模式 分类",I:!1}}],["/tag/",{loader:()=>t.e(797).then(t.bind(t,2520)),meta:{t:"标签",I:!1}}],["/tag/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/",{loader:()=>t.e(55).then(t.bind(t,4598)),meta:{t:"标签: 设计模式",I:!1}}],["/article/",{loader:()=>t.e(511).then(t.bind(t,8910)),meta:{t:"文章",I:!1}}],["/star/",{loader:()=>t.e(199).then(t.bind(t,5410)),meta:{t:"星标",I:!1}}],["/timeline/",{loader:()=>t.e(464).then(t.bind(t,8732)),meta:{t:"时间轴",I:!1}}]])},7697:(e,l,t)=>{t.d(l,{o:()=>i});const i=[{title:"Intro Page",headers:[],path:"/intro.html",pathLocale:"/",extraFields:[]},{title:"架构学习概览",headers:[{level:2,title:"架构重点：",slug:"架构重点",link:"#架构重点",children:[]},{level:2,title:"架构风格",slug:"架构风格",link:"#架构风格",children:[]},{level:2,title:"4+1 视图",slug:"_4-1-视图",link:"#_4-1-视图",children:[]},{level:2,title:"4A架构图",slug:"_4a架构图",link:"#_4a架构图",children:[]},{level:2,title:"架构图的应用场景",slug:"架构图的应用场景",link:"#架构图的应用场景",children:[]},{level:2,title:"TODO清单",slug:"todo清单",link:"#todo清单",children:[]}],path:"/architecture-design/",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/architecture-design/Redis%E7%AC%94%E8%AE%B0.html",pathLocale:"/",extraFields:[]},{title:"设计原则与思想",headers:[{level:2,title:"前言",slug:"前言",link:"#前言",children:[]},{level:2,title:"一、代码质量评判标准",slug:"一、代码质量评判标准",link:"#一、代码质量评判标准",children:[{level:3,title:"01|如何评价代码质量的高低？",slug:"_01-如何评价代码质量的高低",link:"#_01-如何评价代码质量的高低",children:[]},{level:3,title:"02|最常用的评价标准",slug:"_02-最常用的评价标准",link:"#_02-最常用的评价标准",children:[]},{level:3,title:"03|如何写出高质量的代码：",slug:"_03-如何写出高质量的代码",link:"#_03-如何写出高质量的代码",children:[]}]},{level:2,title:"二、面向对象",slug:"二、面向对象",link:"#二、面向对象",children:[{level:3,title:"01|面向对象概述",slug:"_01-面向对象概述",link:"#_01-面向对象概述",children:[]},{level:3,title:"02|面向对象四大特性",slug:"_02-面向对象四大特性",link:"#_02-面向对象四大特性",children:[]},{level:3,title:"03|面向对象 vs 面向过程(结构化)",slug:"_03-面向对象-vs-面向过程-结构化",link:"#_03-面向对象-vs-面向过程-结构化",children:[]},{level:3,title:"04 | 面向对象分析、设计与编程",slug:"_04-面向对象分析、设计与编程",link:"#_04-面向对象分析、设计与编程",children:[]},{level:3,title:"05 | 接口 VS 抽象类",slug:"_05-接口-vs-抽象类",link:"#_05-接口-vs-抽象类",children:[]},{level:3,title:"06 | 基于接口而非实现编程",slug:"_06-基于接口而非实现编程",link:"#_06-基于接口而非实现编程",children:[]},{level:3,title:"07 | 多用组合少用继承",slug:"_07-多用组合少用继承",link:"#_07-多用组合少用继承",children:[]},{level:3,title:"08 | 贫血模型 VS 充血模型",slug:"_08-贫血模型-vs-充血模型",link:"#_08-贫血模型-vs-充血模型",children:[]}]},{level:2,title:"三、 设计原则",slug:"三、-设计原则",link:"#三、-设计原则",children:[{level:3,title:"01| SOLID原则：单一职责 SRP（Single Responsibility Principle）",slug:"_01-solid原则-单一职责-srp-single-responsibility-principle",link:"#_01-solid原则-单一职责-srp-single-responsibility-principle",children:[]},{level:3,title:"02| SOLID原则：开闭原则 OCP（Open Closed Principle）",slug:"_02-solid原则-开闭原则-ocp-open-closed-principle",link:"#_02-solid原则-开闭原则-ocp-open-closed-principle",children:[]},{level:3,title:"03| SOLID原则：里氏替换原则 LSP（Liskov substitution principle）",slug:"_03-solid原则-里氏替换原则-lsp-liskov-substitution-principle",link:"#_03-solid原则-里氏替换原则-lsp-liskov-substitution-principle",children:[]},{level:3,title:"04| SOLID原则：接口隔离原则 ISP（Interface Segregation Principle）",slug:"_04-solid原则-接口隔离原则-isp-interface-segregation-principle",link:"#_04-solid原则-接口隔离原则-isp-interface-segregation-principle",children:[]},{level:3,title:"05| SOLID原则：依赖倒置原则 DIP（Dependency Inversion Principle）",slug:"_05-solid原则-依赖倒置原则-dip-dependency-inversion-principle",link:"#_05-solid原则-依赖倒置原则-dip-dependency-inversion-principle",children:[]},{level:3,title:"06| KISS、YAGNI 原则",slug:"_06-kiss、yagni-原则",link:"#_06-kiss、yagni-原则",children:[]},{level:3,title:"07| DRY 原则(Don't repeat yourself)",slug:"_07-dry-原则-don-t-repeat-yourself",link:"#_07-dry-原则-don-t-repeat-yourself",children:[]},{level:3,title:"08| LOD 原则（Law of Demeter）",slug:"_08-lod-原则-law-of-demeter",link:"#_08-lod-原则-law-of-demeter",children:[]}]}],path:"/architecture-design/design-principles-ideas.html",pathLocale:"/",extraFields:[]},{title:"",headers:[{level:2,title:"双亲委派",slug:"双亲委派",link:"#双亲委派",children:[]}],path:"/architecture-design/%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE.html",pathLocale:"/",extraFields:[]},{title:"设计模式总结",headers:[{level:2,title:"01| 创建型",slug:"_01-创建型",link:"#_01-创建型",children:[{level:3,title:"1. 单例模式",slug:"_1-单例模式",link:"#_1-单例模式",children:[]},{level:3,title:"2. 工厂模式",slug:"_2-工厂模式",link:"#_2-工厂模式",children:[]}]},{level:2,title:"02| 结构型",slug:"_02-结构型",link:"#_02-结构型",children:[]},{level:2,title:"03| 行为型",slug:"_03-行为型",link:"#_03-行为型",children:[]}],path:"/architecture-design/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93.html",pathLocale:"/",extraFields:[]},{title:"",headers:[{level:2,title:"计算机基础的学习笔记",slug:"计算机基础的学习笔记",link:"#计算机基础的学习笔记",children:[]}],path:"/cs-basics/",pathLocale:"/",extraFields:[]},{title:"",headers:[{level:2,title:"环境部署的文档",slug:"环境部署的文档",link:"#环境部署的文档",children:[]}],path:"/env-deploy/",pathLocale:"/",extraFields:[]},{title:"数据要素学习报告",headers:[{level:2,title:"01| 什么是数据要素",slug:"_01-什么是数据要素",link:"#_01-什么是数据要素",children:[{level:3,title:"数据的概念与独特属性",slug:"数据的概念与独特属性",link:"#数据的概念与独特属性",children:[]},{level:3,title:"数据成为生产要素有深厚的技术和产业背景。",slug:"数据成为生产要素有深厚的技术和产业背景。",link:"#数据成为生产要素有深厚的技术和产业背景。",children:[]},{level:3,title:"数据要素主要通过三条途径实现价值",slug:"数据要素主要通过三条途径实现价值",link:"#数据要素主要通过三条途径实现价值",children:[]}]},{level:2,title:"02| 数据要素市场培育现状",slug:"_02-数据要素市场培育现状",link:"#_02-数据要素市场培育现状",children:[{level:3,title:"数据要素市场的政策布局",slug:"数据要素市场的政策布局",link:"#数据要素市场的政策布局",children:[]},{level:3,title:"数据要素市场价值化的三种流通形式",slug:"数据要素市场价值化的三种流通形式",link:"#数据要素市场价值化的三种流通形式",children:[]},{level:3,title:"数据要素市场供需对接向多行业发展",slug:"数据要素市场供需对接向多行业发展",link:"#数据要素市场供需对接向多行业发展",children:[]}]},{level:2,title:"03| 数据要素发展面临的挑战与探索思路",slug:"_03-数据要素发展面临的挑战与探索思路",link:"#_03-数据要素发展面临的挑战与探索思路",children:[{level:3,title:"权力归属难以界定，有待建立产权制度",slug:"权力归属难以界定-有待建立产权制度",link:"#权力归属难以界定-有待建立产权制度",children:[]},{level:3,title:"估值定价缺乏依据，有待发挥市场作用",slug:"估值定价缺乏依据-有待发挥市场作用",link:"#估值定价缺乏依据-有待发挥市场作用",children:[]},{level:3,title:"流通规则尚不完善，有待鼓励积极探索",slug:"流通规则尚不完善-有待鼓励积极探索",link:"#流通规则尚不完善-有待鼓励积极探索",children:[]},{level:3,title:"流通技术仍未成熟，有待强化技术支撑",slug:"流通技术仍未成熟-有待强化技术支撑",link:"#流通技术仍未成熟-有待强化技术支撑",children:[]}]},{level:2,title:"04| 数据要素发展展望",slug:"_04-数据要素发展展望",link:"#_04-数据要素发展展望",children:[]}],path:"/learn/%E6%95%B0%E6%8D%AE%E8%A6%81%E7%B4%A0%E5%AD%A6%E4%B9%A0%E6%8A%A5%E5%91%8A.html",pathLocale:"/",extraFields:[]},{title:"",headers:[{level:2,title:"生活爱好等",slug:"生活爱好等",link:"#生活爱好等",children:[]}],path:"/life-hobbies/",pathLocale:"/",extraFields:[]},{title:"读书笔记",headers:[{level:2,title:"阅读技巧",slug:"阅读技巧",link:"#阅读技巧",children:[]},{level:2,title:"阅读准备",slug:"阅读准备",link:"#阅读准备",children:[{level:3,title:"读书笔记",slug:"读书笔记-1",link:"#读书笔记-1",children:[]}]},{level:2,title:"其他阅读理论",slug:"其他阅读理论",link:"#其他阅读理论",children:[]}],path:"/reading/",pathLocale:"/",extraFields:[]},{title:"",headers:[{level:2,title:"计算机基础的学习笔记",slug:"计算机基础的学习笔记",link:"#计算机基础的学习笔记",children:[]}],path:"/spring/",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/cs-basics/java/",pathLocale:"/",extraFields:[]},{title:"",headers:[],path:"/404.html",pathLocale:"/",extraFields:[]},{title:"Learn",headers:[],path:"/learn/",pathLocale:"/",extraFields:[]},{title:"分类",headers:[],path:"/category/",pathLocale:"/",extraFields:[]},{title:"设计模式 分类",headers:[],path:"/category/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/",pathLocale:"/",extraFields:[]},{title:"标签",headers:[],path:"/tag/",pathLocale:"/",extraFields:[]},{title:"标签: 设计模式",headers:[],path:"/tag/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/",pathLocale:"/",extraFields:[]},{title:"文章",headers:[],path:"/article/",pathLocale:"/",extraFields:[]},{title:"星标",headers:[],path:"/star/",pathLocale:"/",extraFields:[]},{title:"时间轴",headers:[],path:"/timeline/",pathLocale:"/",extraFields:[]}]},9354:(e,l,t)=>{t.d(l,{U:()=>i});const i=JSON.parse('{"base":"/","lang":"zh-CN","title":"FlynnDocs 学习笔记","description":"技术学习、生活爱好的自我提升的笔记，记录分享一切自己感兴趣的知识","head":[],"locales":{}}')},8120:(e,l,t)=>{t.d(l,{K:()=>i});const i=JSON.parse('{"encrypt":{},"author":{"name":"Flynn","url":"https://sciencefl.github.io/"},"logo":"https://theme-hope-assets.vuejs.press/logo.svg","repo":"https://github.com/sciencefl/sciencefl.github.io","repoLabel":"Gitee","repoDisplay":true,"docsDir":"docs","license":"CC BY-NC-ND 4.0","copyright":"\\n  版权声明：自由转载 - 非商用 - 非衍生 - 保持署名<a href=\\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh-hans\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">（创意共享 4.0 许可证）</a>|\\n  Copyright © 2024-present FlynnDocs</a>\\n  ","displayFooter":true,"breadcrumb":false,"contributors":true,"lastUpdated":true,"editLink":false,"darkmode":"switch","fullscreen":true,"navbarLayout":{"start":["Brand"],"center":["Links"],"end":["SocialLink","Repo","Outlook","Search"]},"pageInfo":["Category","Tag","Word","ReadingTime","PageView"],"blog":{"name":"Flynn","description":"勇敢做自己","intro":"/intro.html","medias":{}},"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家"},"navbar":[{"text":"架构设计","icon":"pen-to-square","link":"architecture-design/"},{"text":"计算机基础","icon":"pen-to-square","link":"cs-basics/"},{"text":"生活","icon":"pen-to-square","link":"life-hobbies/"}],"sidebar":{"/architecture-design/":[{"text":"设计原则与设计思想","icon":"basic","link":"design-principles-ideas"},{"text":"设计模式总结","icon":"Facebook","link":"设计模式总结"}],"/":[{"text":"如何使用","icon":"laptop-code","link":"architecture-design/"}]}}}}')},6650:(e,l,t)=>{},1878:(e,l,t)=>{t.d(l,{v:()=>i});const i={}},8047:(e,l,t)=>{t.d(l,{P:()=>i});const i={}}},e=>{e.O(0,[703,550],(()=>e(e.s=569))),e.O()}]);